"use strict";(self.webpackChunkstandards_dev=self.webpackChunkstandards_dev||[]).push([[4765],{65404:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(36672);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},96204:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"attributes/1231","title":"has equalization","description":"Element Reference","source":"@site/docs/attributes/1231.mdx","sourceDirName":"attributes","slug":"/attributes/1231","permalink":"/ISBDM/docs/attributes/1231","draft":false,"unlisted":false,"editUrl":"https://github.com/iflastandards/ISBDM/tree/main/docs/attributes/1231.mdx","tags":[],"version":"current","lastUpdatedBy":"Jon Phipps","lastUpdatedAt":1750088769000,"sidebarPosition":10,"frontMatter":{"sidebar_class_name":"sidebar-level-2","sidebar_label":"has equalization","sidebar_level":2,"sidebar_position":10,"customProps":{"sidebar_prefix":"\u2502  \u251c\u2500 "},"id":"1231","title":"has equalization","RDF":{"definition":"Relates a manifestation to a physical characteristic that is the method that is used to adjust the volume of different frequency bands in audio content that is embodied in the manifestation.","domain":"Manifestation","type":"DatatypeProperty","scopeNote":"This element applies to a manifestation that embodies performed music, sounds, or spoken word content.","range":"","equivalentProperty":[],"inverseOf":[],"elementSubType":[],"elementSuperType":[{"uri":"http://iflastandards.info/ns/isbdm/elements/P1242","url":"/docs/attributes/1242","label":"has physical characteristic"}]},"deprecated":null,"deprecatedInVersion":null,"willBeRemovedInVersion":null},"sidebar":"docs","previous":{"title":"has encoding format","permalink":"/ISBDM/docs/attributes/1289"},"next":{"title":"has extent of manifestation","permalink":"/ISBDM/docs/attributes/1023"}}');var s=i(23420),a=i(65404);const r={sidebar_class_name:"sidebar-level-2",sidebar_label:"has equalization",sidebar_level:2,sidebar_position:10,customProps:{sidebar_prefix:"\u2502  \u251c\u2500 "},id:"1231",title:"has equalization",RDF:{definition:"Relates a manifestation to a physical characteristic that is the method that is used to adjust the volume of different frequency bands in audio content that is embodied in the manifestation.",domain:"Manifestation",type:"DatatypeProperty",scopeNote:"This element applies to a manifestation that embodies performed music, sounds, or spoken word content.",range:"",equivalentProperty:[],inverseOf:[],elementSubType:[],elementSuperType:[{uri:"http://iflastandards.info/ns/isbdm/elements/P1242",url:"/docs/attributes/1242",label:"has physical characteristic"}]},deprecated:null,deprecatedInVersion:null,willBeRemovedInVersion:null},o="has equalization",l={},d=[{value:"Element Reference",id:"element-reference",level:2},{value:"Stipulations",id:"stipulations",level:4}];function c(e){const t={h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,a.R)(),...e.components},{ElementReference:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ElementReference",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"has-equalization",children:"has equalization"})}),"\n",(0,s.jsx)(t.h2,{id:"element-reference",children:"Element Reference"}),"\n",(0,s.jsx)(i,{frontMatter:r}),"\n",(0,s.jsx)(t.h4,{id:"stipulations",children:"Stipulations"}),"\n",(0,s.jsx)("div",{className:"stip",children:(0,s.jsx)(t.p,{children:"Use the element super-type to record a less specific attribute."})}),"\n",(0,s.jsx)("div",{className:"stip",children:(0,s.jsx)(t.p,{children:"Apply the stipulations for the element super-type unless indicated otherwise."})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);