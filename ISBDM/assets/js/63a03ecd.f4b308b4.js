"use strict";(self.webpackChunkstandards_dev=self.webpackChunkstandards_dev||[]).push([[6028],{49646:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"attributes/general","title":"General stipulations for attribute elements","description":"Record an attribute if it is considered to be useful for users of the metadata, unless indicated otherwise.","source":"@site/docs/attributes/general.mdx","sourceDirName":"attributes","slug":"/attributes/general","permalink":"/standards-dev/ISBDM/docs/attributes/general","draft":false,"unlisted":false,"editUrl":"https://github.com/iflastandards/ISBDM/tree/main/docs/attributes/general.mdx","tags":[],"version":"current","lastUpdatedBy":"Jon Phipps","lastUpdatedAt":1750095357000,"sidebarPosition":1,"frontMatter":{"sidebar_class_name":"sidebar-level-1","sidebar_label":"[General stipulations]","sidebar_level":1,"sidebar_position":1,"id":"general","title":"General stipulations for attribute elements"},"sidebar":"docs","previous":{"title":"Attribute elements","permalink":"/standards-dev/ISBDM/docs/attributes/"},"next":{"title":"has category of manifestation","permalink":"/standards-dev/ISBDM/docs/attributes/1263"}}');var a=i(23420),n=i(65404);const o={sidebar_class_name:"sidebar-level-1",sidebar_label:"[General stipulations]",sidebar_level:1,sidebar_position:1,id:"general",title:"General stipulations for attribute elements"},r="General stipulations for attribute elements",d={},c=[];function l(e){const t={h1:"h1",header:"header",li:"li",ol:"ol",p:"p",...(0,n.R)(),...e.components},{InLink:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("InLink",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"general-stipulations-for-attribute-elements",children:"General stipulations for attribute elements"})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsx)(t.p,{children:"Record an attribute if it is considered to be useful for users of the metadata, unless indicated otherwise."})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsx)(t.p,{children:"Record an attribute that is named or otherwise identified in a statement that appears in the manifestation."})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsx)(t.p,{children:"Record an attribute that is associated with the manifestation in external sources of information."})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsx)(t.p,{children:"Record an attribute of the manifestation. Do not record an attribute that is known to be falsely associated with the manifestation."})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsx)(t.p,{children:"Record an attribute that is real and is known to exist or have existed. Do not record an attribute that is known to be fictitious."})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsxs)(t.p,{children:["Record a ",(0,a.jsx)(i,{href:"/docs/notes/1207",children:"has note on manifestation"})," element that gives information that is not recorded in an attribute element, if it is considered to be useful for users of the metadata."]})}),"\n",(0,a.jsxs)("div",{className:"stip",children:[(0,a.jsx)(t.p,{children:"If more than one value is associated with the same attribute of the manifestation, record a separate occurrence of the element for each distinct value that is considered to be useful for users of the metadata. Use the following order of preference:"}),(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"The predominance of values that are given in external sources of information."}),"\n",(0,a.jsx)(t.li,{children:"The prominence of values that apply to the manifestation."}),"\n",(0,a.jsx)(t.li,{children:"The order of values that appear in a statement in the manifestation."}),"\n"]})]}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsx)(t.p,{children:"For a manifestation that embodies the expression of a diachronic work, and if there is a change in the information that is given in statements that describe the manifestation and appear in manifestations that embody expressions of issues or iterations of the work, record an additional occurrence of the element for the attribute that has changed, if it is considered to be useful for users of the metadata."})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsxs)(t.p,{children:["For a manifestation that embodies the expression of a diachronic work, record a ",(0,a.jsx)(i,{href:"/docs/notes/1219",children:"has note on category of manifestation"})," element that gives information about a change in an attribute that is common to the manifestations that embody expressions of issues or iterations of the work, including identification of the issue or iteration in which the change first appears, if it is considered to be useful for users of the metadata."]})}),"\n",(0,a.jsx)("div",{className:"stip",children:(0,a.jsxs)(t.p,{children:["For a manifestation that embodies the expression of a diachronic work, record a ",(0,a.jsx)(i,{href:"/docs/notes/1219",children:"has note on category of manifestation"})," element that gives general information about multiple changes over time in an attribute that is common to the manifestations that embody expressions of issues or iterations of the work, including identification of the issues or iterations in which the changes occur, if it is considered to be useful for users of the metadata."]})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>r});var s=i(36672);const a={},n=s.createContext(a);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);