"use strict";(self.webpackChunkstandards_dev=self.webpackChunkstandards_dev||[]).push([[797],{5521:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(36672);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}},35591:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"development/rdf-to-csv-tool","title":"RDF to CSV Conversion Tools","description":"Overview","source":"@site/docs/development/rdf-to-csv-tool.md","sourceDirName":"development","slug":"/development/rdf-to-csv-tool","permalink":"/standards-dev/ISBDM/docs/development/rdf-to-csv-tool","draft":false,"unlisted":false,"editUrl":"https://github.com/iflastandards/ISBDM/tree/main/docs/development/rdf-to-csv-tool.md","tags":[],"version":"current","lastUpdatedBy":"Jon Phipps","lastUpdatedAt":1749564100000,"frontMatter":{}}');var l=s(23420),r=s(5521);const t={},d="RDF to CSV Conversion Tools",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Installation",id:"installation",level:2},{value:"Single File Converter",id:"single-file-converter",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Command-Line Options",id:"command-line-options",level:3},{value:"Examples",id:"examples",level:3},{value:"Batch Conversion Tool",id:"batch-conversion-tool",level:2},{value:"Usage",id:"usage",level:3},{value:"Command-Line Options",id:"command-line-options-1",level:3},{value:"Default Output Directory",id:"default-output-directory",level:3},{value:"Examples",id:"examples-1",level:3},{value:"Features",id:"features",level:3},{value:"Supported RDF Formats",id:"supported-rdf-formats",level:2},{value:"Features",id:"features-1",level:2},{value:"1. Dynamic Namespace Prefix Extraction",id:"1-dynamic-namespace-prefix-extraction",level:3},{value:"2. Intelligent Namespace Inference",id:"2-intelligent-namespace-inference",level:3},{value:"3. Multilingual Property Support",id:"3-multilingual-property-support",level:3},{value:"4. Repeatable Property Handling",id:"4-repeatable-property-handling",level:3},{value:"5. CSV Output Format",id:"5-csv-output-format",level:3},{value:"DCTAP Profile Format",id:"dctap-profile-format",level:2},{value:"Algorithm Details",id:"algorithm-details",level:2},{value:"Namespace Inference Algorithm",id:"namespace-inference-algorithm",level:3},{value:"CSV Generation Process",id:"csv-generation-process",level:3},{value:"Output Example",id:"output-example",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging",id:"debugging",level:3},{value:"Extending the Tool",id:"extending-the-tool",level:2},{value:"Adding Additional RDF Format Support",id:"adding-additional-rdf-format-support",level:3},{value:"JSON-LD Context Files",id:"json-ld-context-files",level:3},{value:"Custom Namespace Inference",id:"custom-namespace-inference",level:3},{value:"Additional Output Formats",id:"additional-output-formats",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"rdf-to-csv-conversion-tools",children:"RDF to CSV Conversion Tools"})}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"This package provides two scripts for converting RDF files to CSV format:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"rdf-to-csv.ts"})})," - Converts individual RDF files to CSV"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"rdf-folder-to-csv.ts"})})," - Batch converts entire directory structures"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Both tools support intelligent namespace prefix handling, multilingual properties with repeatability based on DCTAP profiles, and multiple RDF formats including Turtle, N-Triples, RDF/XML, and JSON-LD."}),"\n",(0,l.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#single-file-converter",children:"Single File Converter"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#basic-usage",children:"Basic Usage"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#command-line-options",children:"Command-Line Options"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#batch-conversion-tool",children:"Batch Conversion Tool"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#command-line-options-1",children:"Command-Line Options"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#default-output-directory",children:"Default Output Directory"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#examples-1",children:"Examples"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#features",children:"Features"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#supported-rdf-formats",children:"Supported RDF Formats"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#features-1",children:"Features"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#troubleshooting",children:"Troubleshooting"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#extending-the-tool",children:"Extending the Tool"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsxs)(n.p,{children:["The scripts are located in ",(0,l.jsx)(n.code,{children:"/scripts/"})," and require the following dependencies:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn add n3 csv-parse csv-stringify commander @types/n3 jsonld @types/jsonld rdfxml-streaming-parser glob @types/glob chalk ora\nyarn add -D tsx  # For running TypeScript files directly\n"})}),"\n",(0,l.jsx)(n.h2,{id:"single-file-converter",children:"Single File Converter"}),"\n",(0,l.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:to-csv <rdf-file> [options]\n"})}),"\n",(0,l.jsx)(n.p,{children:"Or directly:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"tsx scripts/rdf-to-csv.ts <rdf-file> [options]\n"})}),"\n",(0,l.jsx)(n.h3,{id:"command-line-options",children:"Command-Line Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-p, --profile <dctap-file>"}),": Path to DCTAP profile CSV file (optional)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-o, --output <output-file>"}),": Output CSV file path (default: stdout)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-f, --format <format>"}),": Force RDF format (auto-detected by default)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-h, --help"}),": Display help information"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-V, --version"}),": Display version information"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Basic conversion to stdout:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:to-csv /path/to/file.ttl\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Save to file:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:to-csv /path/to/file.ttl -o output.csv\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use DCTAP profile:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:to-csv /path/to/file.ttl -p profile.csv -o output.csv\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Real-world examples:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Turtle format\nyarn rdf:to-csv /Users/jonphipps/Code/isbd/ttl/ns/isbd/elements.ttl -o isbd-elements.csv\n\n# N-Triples format\nyarn rdf:to-csv /Users/jonphipps/Code/isbd/nt/ns/isbd/elements.nt -o isbd-elements.csv\n\n# RDF/XML format\nyarn rdf:to-csv /Users/jonphipps/Code/isbd/xml/ns/isbd/elements.xml -o isbd-elements.csv\n\n# JSON-LD format\nyarn rdf:to-csv /Users/jonphipps/Code/isbd/jsonld/ns/isbd/elements.jsonld -o isbd-elements.csv\n\n# Force format detection\nyarn rdf:to-csv data.rdf -f application/rdf+xml -o output.csv\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"batch-conversion-tool",children:"Batch Conversion Tool"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"rdf-folder-to-csv.ts"})," script recursively converts all RDF files in a directory structure to CSV format, preserving the folder hierarchy."]}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:folder-to-csv <source-dir> [output-dir] [options]\n"})}),"\n",(0,l.jsx)(n.h3,{id:"command-line-options-1",children:"Command-Line Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-p, --profile <dctap-file>"}),": Path to DCTAP profile CSV file"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-d, --dry-run"}),": Show what would be converted without actually converting"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-v, --verbose"}),": Show detailed progress information"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-e, --extensions <exts>"}),": Comma-separated list of file extensions to process"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-h, --help"}),": Display help information"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"-V, --version"}),": Display version information"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"default-output-directory",children:"Default Output Directory"}),"\n",(0,l.jsx)(n.p,{children:"The tool intelligently determines the default output directory:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["If source directory ends with ",(0,l.jsx)(n.code,{children:"/ttl"}),", it replaces it with ",(0,l.jsx)(n.code,{children:"/csv"})]}),"\n",(0,l.jsxs)(n.li,{children:["Otherwise, it adds ",(0,l.jsx)(n.code,{children:"_csv"})," suffix to the source directory name"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Basic batch conversion:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Converts /path/to/ttl/* to /path/to/csv/*\nyarn rdf:folder-to-csv /path/to/ttl\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Specify output directory:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:folder-to-csv /path/to/rdf /path/to/output\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Dry run to preview:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:folder-to-csv /path/to/ttl --dry-run\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Verbose output with progress:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:folder-to-csv /path/to/ttl --verbose\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"With DCTAP profile:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:folder-to-csv /path/to/ttl -p profile.csv\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Custom file extensions:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Only process .ttl and .rdf files\nyarn rdf:folder-to-csv /path/to/mixed -e ".ttl,.rdf"\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Real-world example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Convert ISBD vocabularies\nyarn rdf:folder-to-csv /Users/jonphipps/Code/ISBDM/static/vocabs/ttl\n# Output: /Users/jonphipps/Code/ISBDM/static/vocabs/csv/\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Recursive processing"}),": Finds all RDF files in subdirectories"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Structure preservation"}),": Maintains the same folder hierarchy in output"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Progress reporting"}),": Shows real-time conversion progress"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Error handling"}),": Continues processing even if individual files fail"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Summary statistics"}),": Reports success/failure counts"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Flexible extensions"}),": Configurable file type filtering"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"supported-rdf-formats",children:"Supported RDF Formats"}),"\n",(0,l.jsx)(n.p,{children:"The tool automatically detects RDF format based on file extension:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Extension"}),(0,l.jsx)(n.th,{children:"Format"}),(0,l.jsx)(n.th,{children:"MIME Type"}),(0,l.jsx)(n.th,{children:"Support Level"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:".ttl"}),", ",(0,l.jsx)(n.code,{children:".turtle"})]}),(0,l.jsx)(n.td,{children:"Turtle"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"text/turtle"})}),(0,l.jsx)(n.td,{children:"Full"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:".n3"})}),(0,l.jsx)(n.td,{children:"Notation3"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"text/n3"})}),(0,l.jsx)(n.td,{children:"Full"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:".nt"}),", ",(0,l.jsx)(n.code,{children:".ntriples"})]}),(0,l.jsx)(n.td,{children:"N-Triples"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"application/n-triples"})}),(0,l.jsx)(n.td,{children:"Full"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:".rdf"}),", ",(0,l.jsx)(n.code,{children:".xml"}),", ",(0,l.jsx)(n.code,{children:".owl"})]}),(0,l.jsx)(n.td,{children:"RDF/XML"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"application/rdf+xml"})}),(0,l.jsx)(n.td,{children:"Full"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:".jsonld"}),", ",(0,l.jsx)(n.code,{children:".json"})]}),(0,l.jsx)(n.td,{children:"JSON-LD"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"application/ld+json"})}),(0,l.jsx)(n.td,{children:"Full*"})]})]})]}),"\n",(0,l.jsxs)(n.p,{children:["*JSON-LD files that reference remote contexts will use local fallback context files if available. The tool includes context files for common vocabularies in ",(0,l.jsx)(n.code,{children:"static/data/contexts/"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"features-1",children:"Features"}),"\n",(0,l.jsx)(n.h3,{id:"1-dynamic-namespace-prefix-extraction",children:"1. Dynamic Namespace Prefix Extraction"}),"\n",(0,l.jsx)(n.p,{children:"The tool automatically extracts namespace prefixes from:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@prefix"})," declarations in the RDF file"]}),"\n",(0,l.jsx)(n.li,{children:"Intelligent inference from URI patterns in the data"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"2-intelligent-namespace-inference",children:"2. Intelligent Namespace Inference"}),"\n",(0,l.jsx)(n.p,{children:"The script uses a tree-based algorithm to infer namespace prefixes when not explicitly declared:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Builds a URI segment tree"})," from all URIs in the RDF data"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Identifies namespace boundaries"})," by analyzing:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Branching points in the URI structure"}),"\n",(0,l.jsx)(n.li,{children:"Frequency of URI patterns"}),"\n",(0,l.jsx)(n.li,{children:"Common namespace indicators (ns, vocab, onto, schema)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Prioritizes namespaces"})," based on depth and frequency"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Generates readable prefixes"})," from URI segments"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Example inference:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"http://iflastandards.info/ns/isbd/"})," \u2192 ",(0,l.jsx)(n.code,{children:"isbd:"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"http://iflastandards.info/ns/isbd/elements/P1001"})," \u2192 ",(0,l.jsx)(n.code,{children:"isbd:elements/P1001"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"http://iflastandards.info/ns/isbd/unc/elements/P1001"})," \u2192 ",(0,l.jsx)(n.code,{children:"isbd:unc/elements/P1001"})]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"3-multilingual-property-support",children:"3. Multilingual Property Support"}),"\n",(0,l.jsx)(n.p,{children:"Properties with language tags are handled with separate columns:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"skos:definition@en"})," - English definition"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"skos:definition@es"})," - Spanish definition"]}),"\n",(0,l.jsx)(n.li,{children:"Properties without language tags have no suffix"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"4-repeatable-property-handling",children:"4. Repeatable Property Handling"}),"\n",(0,l.jsx)(n.p,{children:"Repeatable properties (as defined in DCTAP or defaults) use indexed columns:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"skos:definition@en[0]"})," - First English definition"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"skos:definition@en[1]"})," - Second English definition"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rdfs:label@es[0]"})," - First Spanish label"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"rdfs:label@es[1]"})," - Second Spanish label"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Default repeatable properties:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"skos:definition"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"skos:scopeNote"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"rdfs:label"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"5-csv-output-format",children:"5. CSV Output Format"}),"\n",(0,l.jsx)(n.p,{children:"The CSV output includes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"First column"}),": Resource URI (as CURIE if possible)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Subsequent columns"}),": Property values with headers indicating property, language, and index"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"All URIs converted to CURIEs"})," where possible for readability"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"dctap-profile-format",children:"DCTAP Profile Format"}),"\n",(0,l.jsx)(n.p,{children:"The DCTAP profile should be a CSV file with at least these columns:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"propertyID"}),(0,l.jsx)(n.th,{children:"repeatable"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["skos",":definition"]}),(0,l.jsx)(n.td,{children:"true"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["rdfs",":label"]}),(0,l.jsx)(n.td,{children:"true"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:["dcterms",":title"]}),(0,l.jsx)(n.td,{children:"false"})]})]})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"repeatable"})," column accepts: ",(0,l.jsx)(n.code,{children:"true"}),", ",(0,l.jsx)(n.code,{children:"yes"}),", ",(0,l.jsx)(n.code,{children:"1"})," (case-insensitive) for repeatable properties."]}),"\n",(0,l.jsx)(n.p,{children:"Example DCTAP profile:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-csv",children:"shapeID,shapeLabel,propertyID,propertyLabel,mandatory,repeatable,valueDataType,valueShape,valueConstraint,valueConstraintType,note\n,,skos:definition,Definition,false,true,,,,,\n,,rdfs:label,Label,true,true,,,,,\n,,dcterms:created,Date Created,false,false,xsd:date,,,,\n"})}),"\n",(0,l.jsx)(n.h2,{id:"algorithm-details",children:"Algorithm Details"}),"\n",(0,l.jsx)(n.h3,{id:"namespace-inference-algorithm",children:"Namespace Inference Algorithm"}),"\n",(0,l.jsx)(n.p,{children:"The namespace inference works in multiple phases:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Tree Construction Phase:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Parse all URIs into a hierarchical tree structure"}),"\n",(0,l.jsx)(n.li,{children:"Track frequency of each path segment"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Candidate Identification Phase:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Identify potential namespace boundaries based on:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Multiple child branches (indicating a common parent)"}),"\n",(0,l.jsx)(n.li,{children:"High frequency (used by many resources)"}),"\n",(0,l.jsx)(n.li,{children:"Namespace indicators in path segments"}),"\n",(0,l.jsx)(n.li,{children:"Reasonable depth (2-5 segments)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Scoring and Selection Phase:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Score candidates: ",(0,l.jsx)(n.code,{children:"score = frequency \xd7 log(depth + 1)"})]}),"\n",(0,l.jsx)(n.li,{children:"Higher scores indicate better namespace candidates"}),"\n",(0,l.jsx)(n.li,{children:"Avoid overlapping namespaces"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Prefix Generation Phase:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Extract meaningful prefix from last segment"}),"\n",(0,l.jsx)(n.li,{children:"Ensure no prefix conflicts"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"csv-generation-process",children:"CSV Generation Process"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Resource Extraction:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Identify all unique subject URIs"}),"\n",(0,l.jsx)(n.li,{children:"Group properties by subject"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Header Generation:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Count all property-language combinations"}),"\n",(0,l.jsx)(n.li,{children:"Determine maximum occurrences for repeatable properties"}),"\n",(0,l.jsx)(n.li,{children:"Generate indexed headers for repeatable properties"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Row Generation:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Convert resource URIs to CURIEs"}),"\n",(0,l.jsx)(n.li,{children:"Map property values to appropriate columns"}),"\n",(0,l.jsx)(n.li,{children:"Handle language tags and indices correctly"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"output-example",children:"Output Example"}),"\n",(0,l.jsx)(n.p,{children:"Given this RDF:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-turtle",children:'@prefix skos: <http://www.w3.org/2004/02/skos/core#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\n<http://example.org/concept/123>\n    rdfs:label "Example"@en ;\n    rdfs:label "Ejemplo"@es ;\n    skos:definition "First definition"@en ;\n    skos:definition "Second definition"@en ;\n    skos:definition "Definici\xf3n"@es .\n'})}),"\n",(0,l.jsx)(n.p,{children:"The CSV output would be:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-csv",children:"uri,rdfs:label@en,rdfs:label@es,skos:definition@en[0],skos:definition@en[1],skos:definition@es\nex:concept/123,Example,Ejemplo,First definition,Second definition,Definici\xf3n\n"})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Missing prefixes in output:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Check if the RDF file contains ",(0,l.jsx)(n.code,{children:"@prefix"})," declarations"]}),"\n",(0,l.jsx)(n.li,{children:"The inference algorithm needs sufficient data to detect patterns"}),"\n",(0,l.jsx)(n.li,{children:"Manually add prefixes to the DEFAULT_PREFIXES in the script if needed"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Properties not marked as repeatable:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Provide a DCTAP profile with the ",(0,l.jsx)(n.code,{children:"-p"})," option"]}),"\n",(0,l.jsx)(n.li,{children:"Or modify the default repeatable properties in the script"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Memory issues with large files:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The script loads the entire RDF file into memory"}),"\n",(0,l.jsx)(n.li,{children:"Consider splitting large files or increasing Node.js memory limit"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"JSON-LD remote context errors:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ensure local context files exist in ",(0,l.jsx)(n.code,{children:"static/data/contexts/"})]}),"\n",(0,l.jsx)(n.li,{children:"Check that the context file name matches the expected pattern"}),"\n",(0,l.jsx)(n.li,{children:"Verify the local context file contains proper JSON-LD context definitions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"debugging",children:"Debugging"}),"\n",(0,l.jsx)(n.p,{children:"Run with stderr to see inference information:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"yarn rdf:to-csv input.ttl -o output.csv 2> debug.log\n"})}),"\n",(0,l.jsx)(n.p,{children:"The debug output shows:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Extracted prefixes from the RDF file"}),"\n",(0,l.jsx)(n.li,{children:"Inferred namespace prefixes"}),"\n",(0,l.jsx)(n.li,{children:"Number of resources found"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"extending-the-tool",children:"Extending the Tool"}),"\n",(0,l.jsx)(n.h3,{id:"adding-additional-rdf-format-support",children:"Adding Additional RDF Format Support"}),"\n",(0,l.jsx)(n.p,{children:"To add support for new RDF formats:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Update format detection"})," in ",(0,l.jsx)(n.code,{children:"detectRdfFormat()"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const formatMap: Record<string, string> = {\n  '.newext': 'application/new-format',\n  // ... existing formats\n};\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Add parser support"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["For formats supported by N3.js: Update the ",(0,l.jsx)(n.code,{children:"format"})," parameter"]}),"\n",(0,l.jsxs)(n.li,{children:["For other formats: Add a new parser library and handle in ",(0,l.jsx)(n.code,{children:"parseRdfFile()"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Handle format-specific requirements"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Namespace extraction"}),"\n",(0,l.jsx)(n.li,{children:"Special parsing considerations"}),"\n",(0,l.jsx)(n.li,{children:"Error handling"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-ld-context-files",children:"JSON-LD Context Files"}),"\n",(0,l.jsx)(n.p,{children:"The tool automatically handles JSON-LD files that reference remote contexts by using local fallback context files. When a JSON-LD file references a remote context URL that is unavailable, the tool will:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Detect the remote context URL (e.g., ",(0,l.jsx)(n.code,{children:"http://metadataregistry.org/uri/schema/Contexts/elements_langmap.jsonld"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:["Load the corresponding local context file from ",(0,l.jsx)(n.code,{children:"static/data/contexts/"})]}),"\n",(0,l.jsx)(n.li,{children:"Use the local context to properly parse the JSON-LD data"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Available local context files:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"elements_langmap.jsonld"})," - For RDFS/OWL elements (metadataregistry.org element sets)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"concepts_langmap.jsonld"})," - For SKOS concepts (metadataregistry.org concept schemes)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"These context files define the necessary mappings for custom properties used in metadata registry JSON-LD files, ensuring proper conversion even when remote contexts are unavailable."}),"\n",(0,l.jsx)(n.h3,{id:"custom-namespace-inference",children:"Custom Namespace Inference"}),"\n",(0,l.jsx)(n.p,{children:"To customize namespace detection:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Modify the ",(0,l.jsx)(n.code,{children:"namespaceIndicators"})," array"]}),"\n",(0,l.jsxs)(n.li,{children:["Adjust scoring algorithm in ",(0,l.jsx)(n.code,{children:"inferNamespaceFromURIs()"})]}),"\n",(0,l.jsx)(n.li,{children:"Change depth limits or frequency thresholds"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"additional-output-formats",children:"Additional Output Formats"}),"\n",(0,l.jsx)(n.p,{children:"The tool could be extended to support:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"JSON-LD output"}),"\n",(0,l.jsx)(n.li,{children:"Direct database insertion"}),"\n",(0,l.jsx)(n.li,{children:"Custom delimiters or quoting styles"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);