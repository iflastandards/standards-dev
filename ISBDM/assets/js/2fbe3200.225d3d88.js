"use strict";(self.webpackChunkstandards_dev=self.webpackChunkstandards_dev||[]).push([[2911],{5521:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>l});var n=a(36672);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}},11780:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"examples/vocabulary-table","title":"VocabularyTable Component - Developer Guide","description":"Complete developer guide for the VocabularyTable component","source":"@site/docs/examples/VocabularyTable.mdx","sourceDirName":"examples","slug":"/examples/vocabulary-table","permalink":"/standards-dev/ISBDM/docs/examples/vocabulary-table","draft":false,"unlisted":false,"editUrl":"https://github.com/iflastandards/ISBDM/tree/main/docs/examples/VocabularyTable.mdx","tags":[],"version":"current","lastUpdatedBy":"Jon Phipps","lastUpdatedAt":1749565222000,"frontMatter":{"id":"vocabulary-table","title":"VocabularyTable Component - Developer Guide","description":"Complete developer guide for the VocabularyTable component","sidebar_label":"VocabularyTable Component (Developer)"},"sidebar":"docs","previous":{"title":"Vocabulary - SKOS Example","permalink":"/standards-dev/ISBDM/docs/examples/SkosVocabularyExample"},"next":{"title":"Dark Mode Fixes for ISBDM Components","permalink":"/standards-dev/ISBDM/docs/examples/dark-mode-fixes"}}');var s=a(23420),r=a(5521),i=a(11799);const l={id:"vocabulary-table",title:"VocabularyTable Component - Developer Guide",description:"Complete developer guide for the VocabularyTable component",sidebar_label:"VocabularyTable Component (Developer)"},o="VocabularyTable Component - Developer Guide",d={},c=[{value:"Important Note on Imports",id:"important-note-on-imports",level:2},{value:"Usage",id:"usage",level:2},{value:"Global Defaults",id:"global-defaults",level:3},{value:"Overriding Defaults",id:"overriding-defaults",level:3},{value:"Props",id:"props",level:2},{value:"Page Title Handling",id:"page-title-handling",level:2},{value:"Filter Functionality",id:"filter-functionality",level:2},{value:"Expandable Details",id:"expandable-details",level:2},{value:"UriStyle Options",id:"uristyle-options",level:2},{value:"CaseStyle Options (for slug URIs)",id:"casestyle-options-for-slug-uris",level:2},{value:"Data Interfaces",id:"data-interfaces",level:2},{value:"ConceptProps Interface (Recommended)",id:"conceptprops-interface-recommended",level:3},{value:"RDFMetadata Interface (Legacy)",id:"rdfmetadata-interface-legacy",level:3},{value:"TOCItem Interface",id:"tocitem-interface",level:3},{value:"URL Fragment Navigation",id:"url-fragment-navigation",level:2},{value:"SKOS Relationships",id:"skos-relationships",level:2},{value:"Using the generateTOC Method",id:"using-the-generatetoc-method",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Usage with Concepts Array (Recommended)",id:"basic-usage-with-concepts-array-recommended",level:3},{value:"Basic Usage with RDF Format (Legacy)",id:"basic-usage-with-rdf-format-legacy",level:3},{value:"Using Additional SKOS Properties",id:"using-additional-skos-properties",level:3},{value:"Without Filter",id:"without-filter",level:3},{value:"Without URIs (for glossaries)",id:"without-uris-for-glossaries",level:3},{value:"With Custom Filter Placeholder",id:"with-custom-filter-placeholder",level:3},{value:"With Component-Rendered Title",id:"with-component-rendered-title",level:3},{value:"Numeric URIs (Default)",id:"numeric-uris-default",level:3},{value:"Slug URIs",id:"slug-uris",level:3},{value:"Without URIs (Example)",id:"without-uris-example",level:3},{value:"Expandable Details (Live Example)",id:"expandable-details-live-example",level:3}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"vocabularytable-component---developer-guide",children:"VocabularyTable Component - Developer Guide"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"VocabularyTable"})," component displays controlled vocabularies in a professional, searchable format with multilingual support and CSV data loading capabilities."]}),"\n",(0,s.jsx)(t.h2,{id:"important-note-on-imports",children:"Important Note on Imports"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"VocabularyTable"})," component is ",(0,s.jsx)(t.strong,{children:"globally registered"})," and available in all MDX files without import for JSX usage:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:"<VocabularyTable {...frontMatter} />\n"})}),"\n",(0,s.jsxs)(t.p,{children:["However, if you need to access ",(0,s.jsx)(t.strong,{children:"static methods"})," like ",(0,s.jsx)(t.code,{children:"generateTOC"}),", you must import the component:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:"import VocabularyTable from '@site/src/components/global/VocabularyTable';\n\nexport const toc = VocabularyTable.generateTOC(frontMatter);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.p,{children:"The component is designed to work directly with Docusaurus front matter and supports global defaults from docusaurus.config.ts:"}),"\n",(0,s.jsx)(t.h3,{id:"global-defaults",children:"Global Defaults"}),"\n",(0,s.jsxs)(t.p,{children:["The component uses defaults from ",(0,s.jsx)(t.code,{children:"customFields.vocabularyDefaults"})," in docusaurus.config.ts:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'// docusaurus.config.ts\nconst config = {\n  // ...other config\n  customFields: {\n    vocabularyDefaults: {\n      prefix: "isbdm",\n      startCounter: 1000,\n      uriStyle: "numeric",\n      caseStyle: "kebab-case",\n      showFilter: true,\n      filterPlaceholder: "Filter vocabulary terms...",\n      showTitle: false,\n      RDF: {\n        "rdf:type": ["skos:ConceptScheme"]\n      }\n    }\n  }\n};\n'})}),"\n",(0,s.jsx)(t.p,{children:"These defaults are used when the corresponding props are not provided in the front matter, reducing duplication across vocabulary pages."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'---\nvocabularyId: "1275"\ntitle: ISBDM Extent of Unitary Structure value vocabulary\nuri: http://iflastandards.info/ns/isbdm/values/1275\ntype: Vocabulary\ndescription: This value vocabulary is a source of values for a has extent of unitary structure element.\nscopeNote: The vocabulary does not cover the full scope of the element and may be extended with additional values.\nisDefinedBy: http://iflastandards.info/ns/isbdm/values/1275\nRDF:\n  skos:prefLabel:\n    en: ISBDM Extent of Unitary Structure value vocabulary\n  skos:definition:\n    en: This value vocabulary is a source of values for a has extent of unitary structure element.\n  values:\n    - value: term1\n      definition: Definition of first term\n      scopeNote: Additional notes about the first term\n    - value: term2\n      definition: Definition of second term\n---\n\n# {frontMatter.title}\n\n<VocabularyTable {...frontMatter} />\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Note how common properties like ",(0,s.jsx)(t.code,{children:"prefix"}),", ",(0,s.jsx)(t.code,{children:"startCounter"}),", ",(0,s.jsx)(t.code,{children:"uriStyle"}),", ",(0,s.jsx)(t.code,{children:"caseStyle"}),", ",(0,s.jsx)(t.code,{children:"showTitle"}),", ",(0,s.jsx)(t.code,{children:"showFilter"}),", and ",(0,s.jsx)(t.code,{children:"filterPlaceholder"})," don't need to be specified in every file since they'll use the defaults from the site configuration."]}),"\n",(0,s.jsx)(t.h3,{id:"overriding-defaults",children:"Overriding Defaults"}),"\n",(0,s.jsx)(t.p,{children:"You can override any default value in your front matter:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'---\nvocabularyId: "special-vocab"\ntitle: Special Vocabulary\nprefix: "special"  # Override the default "isbdm" prefix\nuriStyle: "slug"   # Override the default "numeric" style\ncaseStyle: "camelCase"  # Override the default "kebab-case"\nshowFilter: false  # Disable filtering\nRDF:\n  values:\n    - value: "Term One"\n      definition: "Definition of first term"\n---\n'})}),"\n",(0,s.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,s.jsx)(t.p,{children:"The component accepts the entire front matter structure:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Prop"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"vocabularyId"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{children:"Unique identifier for the vocabulary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"title"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"The title of the vocabulary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"prefix"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Namespace prefix for URIs (default: 'isbdm')"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"uri"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"The base URI of the vocabulary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"type"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"The type of the vocabulary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"description"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"The main description of the vocabulary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"scopeNote"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Additional notes about the vocabulary's scope"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"isDefinedBy"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"URI that defines the vocabulary"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"RDF"})}),(0,s.jsx)(t.td,{children:"RDFMetadata"}),(0,s.jsx)(t.td,{children:"No*"}),(0,s.jsx)(t.td,{children:"RDF metadata and vocabulary values (legacy format)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"concepts"})}),(0,s.jsx)(t.td,{children:"ConceptProps[]"}),(0,s.jsx)(t.td,{children:"No*"}),(0,s.jsx)(t.td,{children:"Array of concepts (alternative to RDF.values)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"startCounter"})}),(0,s.jsx)(t.td,{children:"number"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Starting number for term IDs (default: 1000)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"uriStyle"})}),(0,s.jsx)(t.td,{children:"'numeric' | 'slug'"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Method for generating URIs (default: 'numeric')"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"caseStyle"})}),(0,s.jsx)(t.td,{children:"UriCaseStyle"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Case style for slug URIs (default: 'kebab-case')"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"showTitle"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Whether to display the title in the component (default: false)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"showFilter"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Whether to display the filter input (default: true)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"showURIs"})}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Whether to display URIs in the value column (default: true)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"filterPlaceholder"})}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Placeholder text for the filter input (default: 'Filter values...')"})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["*Note: Either ",(0,s.jsx)(t.code,{children:"RDF.values"})," or ",(0,s.jsx)(t.code,{children:"concepts"})," must be provided, but not both. The ",(0,s.jsx)(t.code,{children:"concepts"})," format is the newer, simpler format."]}),"\n",(0,s.jsx)(t.h2,{id:"page-title-handling",children:"Page Title Handling"}),"\n",(0,s.jsxs)(t.p,{children:["By default, the component doesn't display the title from the front matter (",(0,s.jsx)(t.code,{children:"showTitle={false}"}),"). Instead, you should add the title as an H1 heading in your MDX file to avoid duplicate titles:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:"# {frontMatter.title}\n\n<VocabularyTable {...frontMatter} />\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If you need the component to display the title (for example, if it's used inside another component), you can set ",(0,s.jsx)(t.code,{children:"showTitle={true}"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"filter-functionality",children:"Filter Functionality"}),"\n",(0,s.jsx)(t.p,{children:"The component includes a search filter above the table that allows users to quickly find terms by filtering on:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Term values"}),"\n",(0,s.jsx)(t.li,{children:"Definitions"}),"\n",(0,s.jsx)(t.li,{children:"Scope notes"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'The filter is case-insensitive and matches any part of the text in these fields. If no matches are found, a "No matching terms found" message is displayed.'}),"\n",(0,s.jsx)(t.h2,{id:"expandable-details",children:"Expandable Details"}),"\n",(0,s.jsx)(t.p,{children:'The component now includes an expandable details feature. When a concept has additional SKOS properties beyond the main three displayed columns (value, definition, scope note), a "+" button appears in the leftmost column. Clicking this button expands a details row that displays:'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Notation"})," - The concept's notation/code"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Example"})," - Usage examples"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Change note"})," - Notes about changes to the concept"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"History note"})," - Historical information about the concept"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Editorial note"})," - Editorial guidance or notes"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The expanded details provide a clean way to access additional metadata without cluttering the main table view."}),"\n",(0,s.jsx)(t.p,{children:"You can customize the filter with these props:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"showFilter"}),": Set to ",(0,s.jsx)(t.code,{children:"false"})," to hide the filter (default: ",(0,s.jsx)(t.code,{children:"true"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"filterPlaceholder"}),": Customize the placeholder text (default: 'Filter values...')"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"uristyle-options",children:"UriStyle Options"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"numeric"}),": Generates URIs like ",(0,s.jsx)(t.code,{children:"prefix:vocabularyId#t1000"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"slug"}),": Generates URIs like ",(0,s.jsx)(t.code,{children:"prefix:vocabularyId#term-name"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"casestyle-options-for-slug-uris",children:"CaseStyle Options (for slug URIs)"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"kebab-case"}),": Words separated by hyphens (e.g., ",(0,s.jsx)(t.code,{children:"term-name"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"snake_case"}),": Words separated by underscores (e.g., ",(0,s.jsx)(t.code,{children:"term_name"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"camelCase"}),": First word lowercase, others capitalized (e.g., ",(0,s.jsx)(t.code,{children:"termName"}),")"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"PascalCase"}),": All words capitalized (e.g., ",(0,s.jsx)(t.code,{children:"TermName"}),")"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"data-interfaces",children:"Data Interfaces"}),"\n",(0,s.jsx)(t.h3,{id:"conceptprops-interface-recommended",children:"ConceptProps Interface (Recommended)"}),"\n",(0,s.jsx)(t.p,{children:"The newer, simpler format for defining concepts:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"interface ConceptProps {\n  value: string;           // Maps to skos:prefLabel\n  definition: string;      // Maps to skos:definition\n  scopeNote?: string;      // Maps to skos:scopeNote\n  notation?: string;       // Maps to skos:notation\n  example?: string;        // Maps to skos:example\n  changeNote?: string;     // Maps to skos:changeNote\n  historyNote?: string;    // Maps to skos:historyNote\n  editorialNote?: string;  // Maps to skos:editorialNote\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"rdfmetadata-interface-legacy",children:"RDFMetadata Interface (Legacy)"}),"\n",(0,s.jsx)(t.p,{children:"The original format that embeds values within an RDF structure:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"interface RDFMetadata {\n  'rdf:type'?: string[];\n  'skos:prefLabel'?: {\n    [lang: string]: string;\n  };\n  'skos:definition'?: {\n    [lang: string]: string;\n  };\n  'skos:scopeNote'?: {\n    [lang: string]: string;\n  };\n  values: ConceptProps[];  // Uses the same ConceptProps structure\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"tocitem-interface",children:"TOCItem Interface"}),"\n",(0,s.jsxs)(t.p,{children:["Used by the ",(0,s.jsx)(t.code,{children:"generateTOC"})," static method:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"interface TOCItem {\n  value: string;\n  id: string;\n  children: TOCItem[];\n  level: number; // Required by Docusaurus, defaults to 3\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"url-fragment-navigation",children:"URL Fragment Navigation"}),"\n",(0,s.jsx)(t.p,{children:"Each term row has an HTML ID attribute matching the URI fragment, allowing direct access via URL fragments:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"# For numeric style\nhttps://yoursite.org/vocabulary-page#t1000\n\n# For slug style\nhttps://yoursite.org/vocabulary-page#activity-card\n"})}),"\n",(0,s.jsx)(t.h2,{id:"skos-relationships",children:"SKOS Relationships"}),"\n",(0,s.jsx)(t.p,{children:"The component automatically generates SKOS relationships for each concept:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"rdf:type"}),": Set to ",(0,s.jsx)(t.code,{children:"skos:Concept"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"skos:inScheme"}),": Links to the vocabulary using ",(0,s.jsx)(t.code,{children:"prefix:vocabularyId"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"skos:topConceptOf"}),": Links to the vocabulary (all concepts are top concepts by default)"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"These relationships are embedded in the component's data attributes for RDF extraction but are not directly displayed in the UI."}),"\n",(0,s.jsx)(t.h2,{id:"using-the-generatetoc-method",children:"Using the generateTOC Method"}),"\n",(0,s.jsxs)(t.p,{children:["The component provides a static ",(0,s.jsx)(t.code,{children:"generateTOC"})," method for generating a table of contents from vocabulary data. This is particularly useful for glossaries where you want the terms to appear in the Docusaurus sidebar:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:"export const toc = VocabularyTable.generateTOC(frontMatter);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.h3,{id:"basic-usage-with-concepts-array-recommended",children:"Basic Usage with Concepts Array (Recommended)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'---\nvocabularyId: "example"\ntitle: "My Vocabulary"\ndescription: "Example using the simpler concepts format"\nconcepts:\n  - value: "term one"\n    definition: "Definition of first term"\n    scopeNote: "Additional context for term one"\n  - value: "term two"\n    definition: "Definition of second term"\n    notation: "T2"\n    example: "Example usage of term two"\n---\n\n# {frontMatter.title}\n\n<VocabularyTable {...frontMatter} />\n'})}),"\n",(0,s.jsx)(t.h3,{id:"basic-usage-with-rdf-format-legacy",children:"Basic Usage with RDF Format (Legacy)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'---\nvocabularyId: "example"\ntitle: "My Vocabulary"\nRDF:\n  values: [\n    {\n      value: "term one",\n      definition: "Definition of first term"\n    },\n    {\n      value: "term two", \n      definition: "Definition of second term"\n    }\n  ]\n---\n\n# {frontMatter.title}\n\n<VocabularyTable {...frontMatter} />\n'})}),"\n",(0,s.jsx)(t.h3,{id:"using-additional-skos-properties",children:"Using Additional SKOS Properties"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'---\nvocabularyId: "detailed-example"\ntitle: "Vocabulary with Full SKOS Properties"\nconcepts:\n  - value: "aggregate"\n    definition: "A manifestation that embodies more than one discrete expression"\n    scopeNote: "Used for collections and compilations"\n    notation: "AGG"\n    example: "A book containing multiple novels"\n    changeNote: "Definition clarified in 2024"\n    historyNote: "Introduced in version 2.0"\n    editorialNote: "Consider relationship to collection concepts"\n---\n\n# {frontMatter.title}\n\n<VocabularyTable {...frontMatter} />\n'})}),"\n",(0,s.jsx)(t.p,{children:'In this example, a "+" button appears in the first column for the "aggregate" term. Clicking it reveals the additional SKOS properties in an expanded details section below the main row.'}),"\n",(0,s.jsx)(t.h3,{id:"without-filter",children:"Without Filter"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:"<VocabularyTable \n  {...frontMatter}\n  showFilter={false} \n/>\n"})}),"\n",(0,s.jsx)(t.h3,{id:"without-uris-for-glossaries",children:"Without URIs (for glossaries)"}),"\n",(0,s.jsx)(t.p,{children:"For glossaries, you'll typically want to hide URIs but still show the table of contents:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'---\nvocabularyId: "glossary"\ntitle: "Glossary"\ndescription: "Glossary of terms used throughout the documentation"\nshowURIs: false\nconcepts: [\n  // your glossary terms...\n]\n---\n\n# Glossary\n\n<VocabularyTable {...frontMatter} />\n\n// Export the toc to generate the right sidebar TOC from the glossary terms\nexport const toc = VocabularyTable.generateTOC(frontMatter);\n'})}),"\n",(0,s.jsx)(t.p,{children:"Or when using the component directly:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:"<VocabularyTable \n  {...frontMatter}\n  showURIs={false} \n/>\n"})}),"\n",(0,s.jsx)(t.h3,{id:"with-custom-filter-placeholder",children:"With Custom Filter Placeholder"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mdx",children:'<VocabularyTable \n  {...frontMatter}\n  filterPlaceholder="Search for terms..." \n/>\n'})}),"\n",(0,s.jsx)(t.h3,{id:"with-component-rendered-title",children:"With Component-Rendered Title"}),"\n",(0,s.jsx)(i.Ay,{vocabularyId:"example",title:"Component-Rendered Title",description:"When showTitle is true, the component renders the title",showTitle:!0,RDF:{values:[{value:"example term",definition:"This is just an example"}]}}),"\n",(0,s.jsx)(t.h3,{id:"numeric-uris-default",children:"Numeric URIs (Default)"}),"\n",(0,s.jsx)(i.Ay,{vocabularyId:"example",title:"Numeric URI Example",description:"Using numeric URIs with startCounter=1000",startCounter:1e3,uriStyle:"numeric",RDF:{values:[{value:"term one",definition:"Definition of first term"},{value:"term two",definition:"Definition of second term"}]}}),"\n",(0,s.jsx)(t.h3,{id:"slug-uris",children:"Slug URIs"}),"\n",(0,s.jsx)(i.Ay,{vocabularyId:"example",title:"Kebab Case URIs",description:"Using slug URIs with kebab-case",uriStyle:"slug",caseStyle:"kebab-case",RDF:{values:[{value:"term one",definition:"Definition of first term"},{value:"term two",definition:"Definition of second term"}]}}),"\n",(0,s.jsx)(t.h3,{id:"without-uris-example",children:"Without URIs (Example)"}),"\n",(0,s.jsx)(i.Ay,{vocabularyId:"glossary",title:"Glossary Example",description:"Example of a glossary with hidden URIs",showURIs:!1,RDF:{values:[{value:"aggregate",definition:"A manifestation that embodies more than one discrete expression."},{value:"dataset",definition:"An aggregation of metadata that describes instances of specific entities.",scopeNote:"Each instance has a discrete description. A dataset may include instances of more than one type of entity."}]}}),"\n",(0,s.jsx)(t.h3,{id:"expandable-details-live-example",children:"Expandable Details (Live Example)"}),"\n",(0,s.jsx)(t.p,{children:'The following example demonstrates the expandable details feature. Notice the "+" button appears for terms that have additional SKOS properties:'}),"\n",(0,s.jsx)(i.Ay,{vocabularyId:"details-demo",title:"Expandable Details Demo",description:"Click the + button to see additional properties",concepts:[{value:"monograph",definition:"A resource that is complete in one part or intended to be completed within a finite number of parts.",scopeNote:"Typically used for books and similar publications",notation:"MON",example:"A single-volume novel, a three-volume biography",historyNote:"Term adopted from traditional library cataloging"},{value:"serial",definition:"A resource issued in successive parts, usually having numbering, that has no predetermined conclusion.",scopeNote:"Includes periodicals, newspapers, annual reports, journals, etc."},{value:"integrating resource",definition:"A resource that is added to or changed by means of updates that do not remain discrete but are integrated into the whole.",notation:"IR",changeNote:"Definition updated in 2024 to clarify scope",editorialNote:"Consider relationship with continuing resources",example:"A website that is continuously updated, a loose-leaf manual"}]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11799:(e,t,a)=>{a.d(t,{Ay:()=>v});var n=a(36672),s=a(82496),r=a(71029);const i=[{code:"en",name:"English",nativeName:"English"},{code:"fr",name:"French",nativeName:"Fran\xe7ais"},{code:"es",name:"Spanish",nativeName:"Espa\xf1ol"},{code:"it",name:"Italian",nativeName:"Italiano"},{code:"zh",name:"Chinese",nativeName:"\u4e2d\u6587"},{code:"ru",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043a\u0438\u0439"},{code:"bg",name:"Bulgarian",nativeName:"\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438"},{code:"hr",name:"Croatian",nativeName:"Hrvatski"},{code:"lv",name:"Latvian",nativeName:"Latvie\u0161u"}],l=(e,t,a="en")=>{if(!e)return"";if("string"==typeof e)return e;if(e[t]){const a=e[t];return Array.isArray(a)?a[0]:a}if(e[a]){const t=e[a];return Array.isArray(t)?t[0]:t}const n=Object.values(e)[0];return Array.isArray(n)?n[0]:n||""},o=(e,t,a="en")=>{if(!e)return[];if("string"==typeof e)return[e];if(e[t]){const a=e[t];return Array.isArray(a)?a.filter((e=>e&&""!==e.trim())):[a].filter((e=>e&&""!==e.trim()))}if(e[a]){const t=e[a];return Array.isArray(t)?t.filter((e=>e&&""!==e.trim())):[t].filter((e=>e&&""!==e.trim()))}const n=Object.values(e)[0];return n?Array.isArray(n)?n.filter((e=>e&&""!==e.trim())):[n].filter((e=>e&&""!==e.trim())):[]},d=e=>e.map((e=>{const t={value:{},definition:{},uri:e.uri};return Object.entries(e).forEach((([e,a])=>{if(!e.includes("@")||!a)return;const[n,s]=e.split("@"),r=s.split("[")[0],i=s.includes("[")?parseInt(s.split("[")[1].split("]")[0]):0;let l;switch(n.replace("skos:","")){case"prefLabel":l="value";break;case"definition":l="definition";break;case"scopeNote":l="scopeNote";break;case"notation":l="notation";break;case"example":l="example";break;case"changeNote":l="changeNote";break;case"historyNote":l="historyNote";break;case"editorialNote":l="editorialNote";break;case"altLabel":l="altLabel";break;default:return}t[l]||(t[l]={});const o=t[l];0===i?o[r]=a:(Array.isArray(o[r])||(o[r]=o[r]?[o[r]]:[]),o[r][i]=a)})),t})),c=(e,t)=>{const a=e.toLowerCase().replace(/[^\w\s-]/g,"").trim().replace(/\s+/g,"-");switch(t){case"kebab-case":default:return a;case"snake_case":return a.replace(/-/g,"_");case"camelCase":return a.split("-").map(((e,t)=>0===t?e:e.charAt(0).toUpperCase()+e.slice(1))).join("");case"PascalCase":return a.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join("")}},h=e=>{const t=new Set;return e.forEach((e=>{Object.values(e).forEach((e=>{"object"!=typeof e||null===e||Array.isArray(e)||Object.keys(e).forEach((e=>t.add(e)))}))})),Array.from(t).sort()};var u=a(16686);const p=[{propertyID:"skos:inScheme",propertyLabel:"In Scheme",mandatory:!0,repeatable:!1},{propertyID:"rdf:type",propertyLabel:"RDF Type",mandatory:!0,repeatable:!1,valueConstraint:"skos:Concept",valueConstraintType:"pattern"},{propertyID:"skos:prefLabel",propertyLabel:"Preferred Label",mandatory:!0,repeatable:!0,valueDataType:"langString",valueConstraint:"Unique lang tags per item",note:"Preferred label of the term with language tags"},{propertyID:"skos:altLabel",propertyLabel:"Alternate Label",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Alternate labels for the term"},{propertyID:"skos:definition",propertyLabel:"Term Definition",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Definition of the term with language tags"},{propertyID:"skos:scopeNote",propertyLabel:"Term Scope Note",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Additional scope information for the term with language tags"},{propertyID:"skos:notation",propertyLabel:"Term Notation",mandatory:!1,repeatable:!0,valueDataType:"string",note:"Notation or code for the term"},{propertyID:"skos:example",propertyLabel:"Term Example",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Example of the term's usage with language tags"},{propertyID:"skos:changeNote",propertyLabel:"Change Note",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Note about modifications to the term with language tags"},{propertyID:"skos:historyNote",propertyLabel:"History Note",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Note about past state or meaning of the term with language tags"},{propertyID:"skos:editorialNote",propertyLabel:"Editorial Note",mandatory:!1,repeatable:!0,valueDataType:"langString",note:"Note for editors or maintainers about the term with language tags"},{propertyID:"skos:topConceptOf",propertyLabel:"Top Concept Of",mandatory:!0,repeatable:!1,note:"Reference to the parent ConceptScheme"}];function g(e){let t=e.replace(/\[\d+\]$/,"");return t=t.replace(/@[a-z]{2}(-[A-Z]{2})?$/,""),t}function m(e){const t=e.match(/@([a-z]{2}(-[A-Z]{2})?)/);return t?t[1]:null}function f(e){const t=p.find((t=>t.propertyID===e));return"langString"===t?.valueDataType}function x(e){const t=[],a=new Map,n=new Set;e.forEach(((s,r)=>{const i=g(s),l=m(s);if(!function(e){const t=g(e);return"uri"===t||p.some((e=>e.propertyID===t))}(s)&&"uri"!==s)return void t.push({type:"warning",message:`Unknown column: "${s}"`,details:"This column is not defined in the ISBDM value vocabulary profile"});l&&n.add(l),a.has(i)||a.set(i,{headers:[],languages:new Set,hasRepeats:!1});const o=a.get(i);o.headers.push(s),l&&o.languages.add(l),s.match(/\[\d+\]$/)&&(o.hasRepeats=!0);const d=e.findIndex(((e,t)=>t!==r&&e===s));-1!==d&&t.push({type:"error",message:`Duplicate column header found: "${s}"`,details:`Found at positions ${d+1} and ${r+1}. Use array notation [0], [1] for repeatable properties.`})}));if(["uri","skos:prefLabel"].forEach((e=>{a.has(e)||t.push({type:"error",message:`Missing required column: "${e}"`,details:"uri"===e?"Each concept must have a unique URI identifier":"Each concept must have at least one preferred label for each language"})})),a.has("skos:prefLabel")&&n.size>0){const e=a.get("skos:prefLabel").languages,s=Array.from(n).filter((t=>!e.has(t)));s.length>0&&t.push({type:"error",message:"Missing required skos:prefLabel for some languages",details:`Languages without prefLabel: ${s.join(", ")}. PrefLabel is required for all languages.`})}return a.forEach(((e,a)=>{e.hasRepeats&&!function(e){const t=p.find((t=>t.propertyID===e));return t?.repeatable??!1}(a)&&"uri"!==a&&t.push({type:"error",message:`Property "${a}" is not repeatable`,details:"Array notation [0], [1] should only be used for repeatable properties"})})),a.forEach(((e,a)=>{if(f(a)&&e.languages.size>0){const s=Array.from(n).filter((t=>!e.languages.has(t)));s.length>0&&s.length<n.size&&t.push({type:"warning",message:`Inconsistent language coverage for "${a}"`,details:`Missing languages: ${s.join(", ")}. Available: ${Array.from(e.languages).join(", ")}`})}})),a.has("skos:definition")||t.push({type:"warning",message:'Missing "skos:definition" column',details:"Concepts should have definitions for clarity"}),{issues:t,isValid:0===t.filter((e=>"error"===e.type)).length}}function y(e){if(!e||0===e.length)return{issues:[{type:"error",message:"No data found in CSV file",details:"The CSV file appears to be empty or could not be parsed"}],isValid:!1};const t=Object.keys(e[0]),a=x(t),n=function(e,t){const a=[],n=new Set;t.forEach((e=>{const t=m(e);t&&n.add(t)}));const s=[];e.forEach(((e,t)=>{Object.values(e).some((e=>e&&""!==e.toString().trim()))||s.push(t+2)})),s.length>0&&a.push({type:"warning",message:`Found ${s.length} empty row(s)`,details:`Empty rows at line(s): ${s.slice(0,5).join(", ")}${s.length>5?"...":""}`});const r=[],i=new Map;n.forEach((e=>{i.set(e,[])})),e.forEach(((e,a)=>{const s=a+2;e.uri&&""!==e.uri.trim()||r.push(s),n.forEach((a=>{t.filter((e=>"skos:prefLabel"===g(e)&&m(e)===a)).some((t=>e[t]&&""!==e[t].trim()))||i.get(a).push(s)}))})),r.length>0&&a.push({type:"error",message:`Missing URI in ${r.length} row(s)`,details:`Rows without URI: ${r.slice(0,5).join(", ")}${r.length>5?"...":""}`}),i.forEach(((e,t)=>{e.length>0&&a.push({type:"error",message:`Missing skos:prefLabel@${t} in ${e.length} row(s)`,details:`Rows without ${t} label: ${e.slice(0,5).join(", ")}${e.length>5?"...":""}`})}));const l=new Set,o=new Map;if(t.forEach((e=>{const t=g(e);m(e)&&"skos:prefLabel"!==t&&f(t)&&(o.has(t)||o.set(t,[]),o.get(t).push(e))})),e.forEach(((e,t)=>{let a=!1;o.forEach((t=>{const n=t.filter((t=>e[t]&&""!==e[t].trim())),s=t.filter((t=>!e[t]||""===e[t].trim()));n.length>0&&s.length>0&&(a=!0)})),a&&l.add(t+2)})),l.size>0){const e=Array.from(l).sort(((e,t)=>e-t));a.push({type:"warning",message:`Found ${l.size} row(s) with inconsistent language data`,details:`Rows with missing translations: ${e.slice(0,5).join(", ")}${e.length>5?"...":""}`})}const d=[];return e.forEach(((e,t)=>{e.uri&&!function(e){const t=/^https?:\/\//;return/^[a-zA-Z][a-zA-Z0-9]*:[a-zA-Z0-9_\-]+$/.test(e)||t.test(e)}(e.uri)&&d.push(`Line ${t+2}: ${e.uri}`)})),d.length>0&&a.push({type:"warning",message:`Found ${d.length} invalid URI(s)`,details:d.slice(0,3).join("; ")+(d.length>3?"...":"")}),{issues:a,isValid:0===a.filter((e=>"error"===e.type)).length}}(e,t);return{issues:[...a.issues,...n.issues],isValid:a.isValid&&n.isValid}}const b={vocabularyContainer:"vocabularyContainer_tVVg",vocabularyHeader:"vocabularyHeader_Ytjw",vocabularyDescription:"vocabularyDescription_oMHg",languageSelector:"languageSelector_COeN",languageLabel:"languageLabel_GCtU",languageSelect:"languageSelect_EppY",vocabularyControls:"vocabularyControls_xgoD",searchFilter:"searchFilter_GtXM",vocabularyFilterInput:"vocabularyFilterInput_Gtlk",tableContainer:"tableContainer_jynb",headerRow:"headerRow_jPi3",dataRow:"dataRow_hDsX",headerDetails:"headerDetails_qX6x",detailsCell:"detailsCell_hZQr",headerValue:"headerValue_Vo1y",valueCell:"valueCell_XuPM",headerDefinition:"headerDefinition_yDAq",definitionCell:"definitionCell_h6V3",headerScopeNote:"headerScopeNote_SbXm",scopeNoteCell:"scopeNoteCell_YLxa",valueText:"valueText_iX1W",altLabel:"altLabel_SfDh",uriText:"uriText_Fpc2",darkMode:"darkMode_tzrV",noResults:"noResults_IK9L",loadingState:"loadingState_B6e3",errorState:"errorState_lOe_",detailsToggle:"detailsToggle_lErL",detailsRow:"detailsRow_XKxT",detailsContent:"detailsContent_e23R",detailItem:"detailItem_Mn5d",errorBadgeContainer:"errorBadgeContainer__Etv",errorBadge:"errorBadge_iRMV",errorBadgeWarning:"errorBadgeWarning__raE",errorBadgeError:"errorBadgeError_oYwI",errorBadgeIcon:"errorBadgeIcon_FQeT",errorBadgeText:"errorBadgeText_gyok",errorBadgeChevron:"errorBadgeChevron_qbGv",errorBadgeContent:"errorBadgeContent_xC4J",validationSection:"validationSection_N_ff",validationHeader:"validationHeader_TB_G",validationIssues:"validationIssues_WaG6",validationIssue:"validationIssue_Zy09",error:"error_c_Dg",warning:"warning_EQaQ",issueType:"issueType_hAxO",issueMessage:"issueMessage_UfOF",issueDetails:"issueDetails_Bm9y"};var j=a(23420);function v({vocabularyId:e,title:t,prefix:p,uri:g,description:m,scopeNote:f,RDF:x,concepts:v,csvData:N,csvFile:w,csvUrl:C,startCounter:D,uriStyle:S,caseStyle:T,showTitle:I,showFilter:k,showURIs:L,showLanguageSelector:R,showCSVErrors:A,filterPlaceholder:U,defaultLanguage:F,availableLanguages:E,languageConfig:M=i,preferCsvData:_=!1}){const{siteConfig:$,i18n:V}=(0,r.A)(),O=$.customFields?.vocabularyDefaults||{},B=V?.currentLocale||"en",P=p||O.prefix||"isbdm",G=D??O.startCounter??1e3,W=S||O.uriStyle||"numeric",z=T||O.caseStyle||"kebab-case",H=I??O.showTitle??!1,K=k??O.showFilter??!0,q=L??O.showURIs??!0,X=R??O.showLanguageSelector??!0,Y=A??O.showCSVErrors??!0,Z=F||O.defaultLanguage||B,J=(0,n.useMemo)((()=>_&&N?d(N):v||x?.values||[]),[v,x?.values,N,_]),{data:Q,loading:ee,error:te}=function(e){const[t,s]=(0,n.useState)({data:[],loading:!1,error:null}),r=(0,u.Ay)(e||"");return(0,n.useEffect)((()=>{e?(async()=>{s((e=>({...e,loading:!0,error:null})));try{const e=await fetch(r);if(!e.ok)throw new Error(`Failed to load CSV file: ${e.statusText}`);const t=await e.text(),n=(await a.e(9277).then(a.t.bind(a,69277,23))).default.parse(t,{header:!0,dynamicTyping:!0,skipEmptyLines:!0,delimitersToGuess:[",","\t","|",";"]});n.errors.length>0&&console.warn("CSV parsing warnings:",n.errors),s({data:n.data,loading:!1,error:null})}catch(e){console.error("Error loading CSV file:",e),s({data:[],loading:!1,error:e instanceof Error?e.message:"Unknown error loading CSV file"})}})():s({data:[],loading:!1,error:null})}),[e,r]),t}(w),ae=(0,n.useMemo)((()=>w&&Q.length>0?d(Q):J),[w,Q,J]),ne=(0,n.useMemo)((()=>{if(w&&Q.length>0||_&&N){return y((w&&Q.length>0?Q:N)||[])}return null}),[w,Q,N,_]),se=e||w&&w.split("/").pop()?.replace(/\.[^/.]+$/,"")||"vocabulary",{localizedConcepts:re,detectedLanguages:ie,resolvedAvailableLanguages:le,getLanguageDisplayName:oe}=function({concepts:e,currentLanguage:t,defaultLanguage:a,availableLanguages:s,languageConfig:r=i}){const o=(0,n.useMemo)((()=>h(e)),[e]),d=s||o||[a];return{localizedConcepts:(0,n.useMemo)((()=>e.map((e=>({value:l(e.value,t,a),definition:l(e.definition,t,a),scopeNote:l(e.scopeNote,t,a),notation:l(e.notation,t,a),example:l(e.example,t,a),changeNote:l(e.changeNote,t,a),historyNote:l(e.historyNote,t,a),editorialNote:l(e.editorialNote,t,a),altLabel:l(e.altLabel,t,a),originalConcept:e})))),[e,t,a]),detectedLanguages:o,resolvedAvailableLanguages:d,getLanguageDisplayName:e=>{const t=r.find((t=>t.code===e));return t?`${t.nativeName} (${t.name})`:e.toUpperCase()}}}({concepts:ae,currentLanguage:Z,defaultLanguage:Z,availableLanguages:E,languageConfig:M}),[de,ce]=(0,n.useState)(Z);let he=!1;try{const{colorMode:e}=(0,s.G)();he="dark"===e}catch(Ce){he=!1}const[ue,pe]=(0,n.useState)(""),[ge,me]=(0,n.useState)(new Set),fe=l(U||O.filterPlaceholder||"Filter values...",de,Z),xe=(0,n.useMemo)((()=>ae.map((e=>({value:l(e.value,de,Z),definition:l(e.definition,de,Z),scopeNote:l(e.scopeNote,de,Z),notation:l(e.notation,de,Z),example:l(e.example,de,Z),changeNote:l(e.changeNote,de,Z),historyNote:l(e.historyNote,de,Z),editorialNote:l(e.editorialNote,de,Z),altLabel:l(e.altLabel,de,Z),allAltLabels:o(e.altLabel,de,Z),originalConcept:e})))),[ae,de,Z]),ye=(0,n.useMemo)((()=>xe.map(((e,t)=>{const a=G+t;let n;const s=e.value;n="numeric"===W?`t${a}`:c(s,z);const r=e.originalConcept.uri||`${P}:${se}#${n}`;return{...e,uri:r,id:n,"rdf:type":"skos:Concept","skos:inScheme":`${P}:${se}`,"skos:topConceptOf":`${P}:${se}`}})).filter((e=>{if(!ue)return!0;const t=ue.toLowerCase();return e.value.toLowerCase().includes(t)||e.definition.toLowerCase().includes(t)||(e.scopeNote||"").toLowerCase().includes(t)||e.allAltLabels&&e.allAltLabels.some((e=>e.toLowerCase().includes(t)))}))),[xe,G,W,z,P,se,ue]),be=e=>!!(e.notation||e.example||e.changeNote||e.historyNote||e.editorialNote||e.allAltLabels&&e.allAltLabels.length>0),je=(0,n.useMemo)((()=>ye.some(be)),[ye]),ve=l(t,de,Z),Ne=l(m,de,Z),we=l(f,de,Z);return(0,j.jsxs)("div",{className:b.vocabularyContainer,id:`vocabulary-${se}`,children:[H&&ve&&(0,j.jsx)("h3",{children:ve}),(0,j.jsxs)("div",{className:b.vocabularyHeader,children:[(0,j.jsxs)("div",{className:b.vocabularyDescription,children:[Ne&&(0,j.jsx)("p",{children:Ne}),we&&(0,j.jsx)("p",{children:we})]}),X&&le.length>1&&(0,j.jsxs)("div",{className:b.languageSelector,children:[(0,j.jsx)("label",{htmlFor:`language-select-${se}`,className:b.languageLabel,children:"Language:"}),(0,j.jsx)("select",{id:`language-select-${se}`,className:b.languageSelect,value:de,onChange:e=>{ce(e.target.value),me(new Set)},"aria-label":"Select display language",children:le.map((e=>(0,j.jsx)("option",{value:e,children:oe(e)},e)))})]})]}),Y&&ne&&ne.issues.length>0&&(0,j.jsxs)("details",{className:b.errorBadgeContainer,children:[(0,j.jsxs)("summary",{className:`${b.errorBadge} ${ne.issues.some((e=>"error"===e.type))?b.errorBadgeError:b.errorBadgeWarning}`,children:[(0,j.jsx)("span",{className:b.errorBadgeIcon,children:ne.issues.some((e=>"error"===e.type))?"\u274c":"\u26a0\ufe0f"}),(0,j.jsxs)("span",{className:b.errorBadgeText,children:[ne.issues.length," validation issue",ne.issues.length>1?"s":""," found"]}),(0,j.jsx)("span",{className:b.errorBadgeChevron,children:"\u25bc"})]}),(0,j.jsx)("div",{className:b.errorBadgeContent,children:(0,j.jsx)("div",{className:b.validationIssues,children:ne.issues.map(((e,t)=>(0,j.jsxs)("div",{className:`${b.validationIssue} ${b[e.type]}`,children:[(0,j.jsxs)("span",{className:b.issueType,children:["error"===e.type?"\u274c Error":"\u26a0\ufe0f Warning",":"]}),(0,j.jsx)("span",{className:b.issueMessage,children:e.message}),e.details&&(0,j.jsx)("div",{className:b.issueDetails,children:e.details})]},t)))})})]}),ee&&(0,j.jsx)("div",{className:b.loadingState,children:(0,j.jsx)("p",{children:"Loading vocabulary data..."})}),te&&(0,j.jsx)("div",{className:b.errorState,children:(0,j.jsxs)("p",{children:["Error loading vocabulary: ",te]})}),!ee&&!te&&(0,j.jsxs)(j.Fragment,{children:[K&&(0,j.jsx)("section",{className:b.vocabularyControls,children:(0,j.jsx)("div",{className:b.searchFilter,children:(0,j.jsx)("input",{type:"text",className:b.vocabularyFilterInput,placeholder:fe,value:ue,onChange:e=>{pe(e.target.value)},"aria-label":"Filter vocabulary terms"})})}),(0,j.jsxs)("div",{className:`${b.tableContainer} ${he?b.darkMode:""}`,children:[(0,j.jsxs)("div",{className:b.headerRow,children:[je&&(0,j.jsx)("div",{className:b.headerDetails,children:"Detail"}),(0,j.jsx)("div",{className:b.headerValue,children:"Value"}),(0,j.jsx)("div",{className:b.headerDefinition,children:"Definition"}),(0,j.jsx)("div",{className:b.headerScopeNote,children:"Scope note"})]}),ye.length>0?ye.map(((e,t)=>(0,j.jsxs)(n.Fragment,{children:[(0,j.jsxs)("div",{className:b.dataRow,id:e.id,"data-concept-id":e.uri,children:[je&&(0,j.jsx)("div",{className:b.detailsCell,children:be(e)&&(0,j.jsx)("button",{className:b.detailsToggle,onClick:()=>(e=>{const t=new Set(ge);t.has(e)?t.delete(e):t.add(e),me(t)})(t),"aria-expanded":ge.has(t),"aria-controls":`details-${t}`,"aria-label":ge.has(t)?"Collapse details":"Expand details",children:ge.has(t)?"\u2212":"+"})}),(0,j.jsx)("div",{className:b.valueCell,children:(0,j.jsxs)("p",{className:b.valueText,children:[e.value,e.allAltLabels&&e.allAltLabels.length>0&&(0,j.jsxs)("span",{className:b.altLabel,children:[" (",e.allAltLabels.join(", "),")"]}),e.uri&&q&&(0,j.jsxs)("span",{className:b.uriText,children:[(0,j.jsx)("br",{}),"(",e.uri,")"]})]})}),(0,j.jsx)("div",{className:b.definitionCell,children:(0,j.jsx)("p",{children:e.definition})}),(0,j.jsx)("div",{className:b.scopeNoteCell,children:(0,j.jsx)("p",{children:e.scopeNote||""})})]}),be(e)&&ge.has(t)&&(0,j.jsx)("div",{className:b.detailsRow,id:`details-${t}`,role:"region","aria-label":"Additional details",children:(0,j.jsxs)("div",{className:b.detailsContent,children:[e.allAltLabels&&e.allAltLabels.length>0&&(0,j.jsxs)("div",{className:b.detailItem,children:[(0,j.jsxs)("strong",{children:["Alternate label",e.allAltLabels.length>1?"s":"",":"]})," ",e.allAltLabels.join(", ")]}),e.notation&&(0,j.jsxs)("div",{className:b.detailItem,children:[(0,j.jsx)("strong",{children:"Notation:"})," ",e.notation]}),e.example&&(0,j.jsxs)("div",{className:b.detailItem,children:[(0,j.jsx)("strong",{children:"Example:"})," ",e.example]}),e.changeNote&&(0,j.jsxs)("div",{className:b.detailItem,children:[(0,j.jsx)("strong",{children:"Change note:"})," ",e.changeNote]}),e.historyNote&&(0,j.jsxs)("div",{className:b.detailItem,children:[(0,j.jsx)("strong",{children:"History note:"})," ",e.historyNote]}),e.editorialNote&&(0,j.jsxs)("div",{className:b.detailItem,children:[(0,j.jsx)("strong",{children:"Editorial note:"})," ",e.editorialNote]})]})})]},`${e.id}-${de}`))):(0,j.jsx)("div",{className:b.noResults,children:(0,j.jsx)("p",{children:"No matching terms found."})})]})]})]})}v.generateTOC=e=>{let t={};"undefined"!=typeof window&&window.__DOCUSAURUS__&&window.__DOCUSAURUS__.siteConfig&&window.__DOCUSAURUS__.siteConfig.customFields&&(t=window.__DOCUSAURUS__.siteConfig.customFields.vocabularyDefaults||{});const{concepts:a,RDF:n,csvData:s,startCounter:r,uriStyle:i,caseStyle:o,defaultLanguage:h,preferCsvData:u=!1}=e,p=r??t.startCounter??1e3,g=i||t.uriStyle||"numeric",m=o||t.caseStyle||"kebab-case",f=h||t.defaultLanguage||"en";let x;return x=u&&s?d(s):a||n?.values||[],x.map(((e,t)=>{const a=p+t;let n;const s=l(e.value,f,"en");return n="numeric"===g?`t${a}`:c(s,m),{value:s,id:n,children:[],level:3}}))},v.exportToCSV=e=>{const t=e.concepts||e.RDF?.values||[];if(0===t.length)return"";const a=h(t),n=a.length>0?a:["en"],s=["uri","rdf:type"],r=["skos:prefLabel","skos:definition","skos:scopeNote","skos:altLabel","skos:notation","skos:example","skos:changeNote","skos:historyNote","skos:editorialNote"];r.forEach((e=>{n.forEach((t=>{s.push(`${e}@${t}`)}))}));const i=[s];return t.forEach(((t,a)=>{const s=[],l=(e.startCounter||1e3)+a,o=t.uri||`${e.prefix||"isbdm"}:${e.vocabularyId}#t${l}`;s.push(o),s.push("http://www.w3.org/2004/02/skos/core#Concept"),r.forEach((e=>{const a={"skos:prefLabel":"value","skos:definition":"definition","skos:scopeNote":"scopeNote","skos:altLabel":"altLabel","skos:notation":"notation","skos:example":"example","skos:changeNote":"changeNote","skos:historyNote":"historyNote","skos:editorialNote":"editorialNote"}[e];let r=a?t[a]:void 0;n.forEach((e=>{let t="";if(r)if("string"==typeof r)t=r;else if("object"==typeof r&&r[e]){const a=r[e];t=Array.isArray(a)?a[0]:a}s.push(t)}))})),i.push(s)})),i.map((e=>e.map((e=>`"${e.replace(/"/g,'""')}"`)).join(","))).join("\n")}}}]);