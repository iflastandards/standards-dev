"use strict";(self.webpackChunkstandards_dev=self.webpackChunkstandards_dev||[]).push([[9131],{35016:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"development/MDX-LINTING-GUIDE","title":"MDX Linting and Formatting Guide","description":"This guide documents the linting and formatting setup for MDX files in the ISBDM project.","source":"@site/docs/development/MDX-LINTING-GUIDE.md","sourceDirName":"development","slug":"/development/MDX-LINTING-GUIDE","permalink":"/standards-dev/ISBDM/docs/development/MDX-LINTING-GUIDE","draft":false,"unlisted":false,"editUrl":"https://github.com/iflastandards/ISBDM/tree/main/docs/development/MDX-LINTING-GUIDE.md","tags":[],"version":"current","lastUpdatedBy":"Jon Phipps","lastUpdatedAt":1749419212000,"frontMatter":{}}');var r=i(23420),l=i(38906);const t={},o="MDX Linting and Formatting Guide",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Tools Installed",id:"tools-installed",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"ESLint Configuration (<code>.eslintrc.js</code>)",id:"eslint-configuration-eslintrcjs",level:3},{value:"Remark Configuration (<code>.remarkrc.js</code>)",id:"remark-configuration-remarkrcjs",level:3},{value:"Prettier Configuration (<code>.prettierignore</code>)",id:"prettier-configuration-prettierignore",level:3},{value:"Usage",id:"usage",level:2},{value:"Linting MDX Files",id:"linting-mdx-files",level:3},{value:"Formatting MDX Files",id:"formatting-mdx-files",level:3},{value:"Regular Linting",id:"regular-linting",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"Issue: ESLint reports &quot;Parsing error: Unexpected token&quot;",id:"issue-eslint-reports-parsing-error-unexpected-token",level:3},{value:"Issue: Remark formatting removes important whitespace",id:"issue-remark-formatting-removes-important-whitespace",level:3},{value:"Issue: &quot;Plugin &#39;mdx&#39; not found&quot; error",id:"issue-plugin-mdx-not-found-error",level:3},{value:"References",id:"references",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mdx-linting-and-formatting-guide",children:"MDX Linting and Formatting Guide"})}),"\n",(0,r.jsx)(n.p,{children:"This guide documents the linting and formatting setup for MDX files in the ISBDM project."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Docusaurus v3 uses MDX v3 for ",(0,r.jsx)(n.code,{children:".md"})," and ",(0,r.jsx)(n.code,{children:".mdx"})," files, compiling everything into React components. Our setup provides tools to lint and format these files while maintaining compatibility with MDX v3."]}),"\n",(0,r.jsx)(n.h2,{id:"tools-installed",children:"Tools Installed"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ESLint with MDX Support"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eslint"}),": Core linting engine"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eslint-plugin-mdx"}),": Enables ESLint to lint MDX files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@docusaurus/eslint-plugin"}),": Docusaurus-specific linting rules"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Remark for MDX Formatting"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"remark-cli"}),": Command line tool for processing markdown"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"remark-mdx"}),": MDX support for remark"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,r.jsxs)(n.h3,{id:"eslint-configuration-eslintrcjs",children:["ESLint Configuration (",(0,r.jsx)(n.code,{children:".eslintrc.js"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"The ESLint configuration is set up to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Extend recommended configurations for Docusaurus and MDX"}),"\n",(0,r.jsx)(n.li,{children:"Apply specific rules for MDX files"}),"\n",(0,r.jsx)(n.li,{children:"Handle JSX in markdown correctly"}),"\n",(0,r.jsx)(n.li,{children:"Enforce Docusaurus best practices like proper i18n usage"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"remark-configuration-remarkrcjs",children:["Remark Configuration (",(0,r.jsx)(n.code,{children:".remarkrc.js"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"The remark configuration:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Loads the MDX plugin for proper MDX processing"}),"\n",(0,r.jsx)(n.li,{children:"Disables certain linting rules that conflict with Docusaurus usage"}),"\n",(0,r.jsx)(n.li,{children:"Provides consistent formatting for MDX files"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"prettier-configuration-prettierignore",children:["Prettier Configuration (",(0,r.jsx)(n.code,{children:".prettierignore"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Since Prettier doesn't fully support MDX v3, we've added MDX files to ",(0,r.jsx)(n.code,{children:".prettierignore"}),". This prevents Prettier from potentially breaking MDX files during formatting."]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.h3,{id:"linting-mdx-files",children:"Linting MDX Files"}),"\n",(0,r.jsx)(n.p,{children:"To lint all MDX files:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"yarn lint:mdx\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will check for issues in all ",(0,r.jsx)(n.code,{children:".md"})," and ",(0,r.jsx)(n.code,{children:".mdx"})," files in the ",(0,r.jsx)(n.code,{children:"docs"})," and ",(0,r.jsx)(n.code,{children:"src/components"})," directories."]}),"\n",(0,r.jsx)(n.h3,{id:"formatting-mdx-files",children:"Formatting MDX Files"}),"\n",(0,r.jsx)(n.p,{children:"To format MDX files with remark:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"yarn format:mdx\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will process all ",(0,r.jsx)(n.code,{children:".md"})," and ",(0,r.jsx)(n.code,{children:".mdx"})," files according to the remark configuration."]}),"\n",(0,r.jsx)(n.h3,{id:"regular-linting",children:"Regular Linting"}),"\n",(0,r.jsx)(n.p,{children:"For general linting of all supported files:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"yarn lint\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Always run linting before committing changes"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This ensures consistent code style and catches potential issues early"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"For MDX files, use remark for formatting, not Prettier"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prettier may break MDX v3 syntax"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Follow the HTML-TO-MDX-CONVERSION-RULES.md guidelines"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"These rules ensure consistent MDX content that will pass linting"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use JSX attributes correctly in MDX"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"className"})," instead of ",(0,r.jsx)(n.code,{children:"class"})]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"htmlFor"})," instead of ",(0,r.jsx)(n.code,{children:"for"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Handle curly braces in MDX properly"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wrap expressions with backticks to prevent parsing errors"}),"\n",(0,r.jsxs)(n.li,{children:["Example: ",(0,r.jsx)(n.code,{children:"`{variable}`"})," instead of ",(0,r.jsx)(n.code,{children:"{variable}"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,r.jsx)(n.h3,{id:"issue-eslint-reports-parsing-error-unexpected-token",children:'Issue: ESLint reports "Parsing error: Unexpected token"'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": This usually happens when ESLint doesn't recognize MDX syntax. Check that:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The file has the correct extension (",(0,r.jsx)(n.code,{children:".mdx"})," not ",(0,r.jsx)(n.code,{children:".md"}),") if it contains JSX"]}),"\n",(0,r.jsx)(n.li,{children:"Expressions with curly braces are properly escaped with backticks"}),"\n",(0,r.jsx)(n.li,{children:"The ESLint configuration is loaded correctly"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"issue-remark-formatting-removes-important-whitespace",children:"Issue: Remark formatting removes important whitespace"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": Add specific remark plugins or rules to preserve necessary whitespace. You may need to adjust the ",(0,r.jsx)(n.code,{children:".remarkrc.js"})," configuration."]}),"\n",(0,r.jsx)(n.h3,{id:"issue-plugin-mdx-not-found-error",children:"Issue: \"Plugin 'mdx' not found\" error"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": Make sure all dependencies are properly installed. Try reinstalling with:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"yarn add --dev eslint-plugin-mdx\n"})}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features",children:"Docusaurus Markdown Features"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features/react",children:"MDX and React in Docusaurus"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/mdx-js/eslint-mdx",children:"eslint-plugin-mdx Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/remarkjs/remark",children:"Remark Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},38906:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(36672);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);